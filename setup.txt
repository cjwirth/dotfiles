- Install Xcode, which will install git
	- might need to set editor to vim or get errors later (not sure of the cause)
	$ git config --global core.editor /usr/bin/vim
- Show hidden files
	defaults write com.apple.finder AppleShowAllFiles YES
- Setup new ssh keys
	ssh-keygen -t rsa -C "your_email@example.com" # create the key
	eval "$(ssh-agent -s)" # start the ssh agent
	ssh-add ~/.ssh/id_rsa # add the new key

	optional: multiple ssh keys for different services.
	Sample: 

	Host ghe.amb.ca.local
		Hostname ghe.amb.ca.local
		User git
		IdentityFile ~/.ssh/id_rsa_CA

	Host github.com
		HostName github.com
		User git
		IdentityFile ~/.ssh/cjwirth

- Grab dot files and important things from github
	- probably need to figure out some things of how to automate the dot files
	- some links: `ln -s source new_link`
		ln -s ~/dotfiles/oh-my-zsh/ ~/.oh-my-zsh
		ln -s ~/dotfiles/vim ~/.vim
		ln -s ~/dotfiles/vimrc ~/.vimrc
		ln -s ~/dotfiles/.zshrc ~/.zshrc
		ln -s ~/dotfiles/ColorThemes/Xcode ~/Library/Developer/Xcode/UserData/FontAndColorThemes
        ln -s ~/dotfiles/.hushlogin ~/.hushlogin
        ln -s ~/dotfiles/.screenrc ~/.screenrc

	- change to zsh: `chsh -s /bin/zsh`

- install homebrew
- install pass (so now we can get our passwords haha)
	- two lines from brew
	- need to get the ID files in there too
	http://montemazuma.wordpress.com/2010/03/01/moving-a-gpg-key-privately/
		0. `export GPG_TTY=`tty`` <-- fixes but when combining keys
		1. copy public key `gpg --output pubkey.gpg --export {KEYID}`
		2. combine pub+sec into secure file
			`gpg2 --output - --export-secret-key {KEYID} |\
	 		cat pubkey.gpg - |\
	 		gpg2 --armor --output keys.asc --symmetric --cipher-algo AES256`
	 	3. copy file over to new pc
	 	4. import `gpg2 --no-use-agent --output - keys.asc | gpg --import`


